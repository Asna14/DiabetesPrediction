import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

# loading the diabetes dataset to a panda datsaset
diabetes_dataset = pd.read_csv('/diabetes.csv')
#printing the frist 5 rows of dataset
diabetes_dataset.head()
#number of rows and columns in this dataset
diabetes_dataset.shape
#getting the statistical measure of the data
diabetes_dataset.describe()
diabetes_dataset['Outcome'].value_counts()
diabetes_dataset.groupby('Outcome').mean()
#separting the data and labels
X = diabetes_dataset.drop(columns = 'Outcome', axis=1)
Y= diabetes_dataset['Outcome']
print(X)
print(Y)
#Data strandrization
scaler = StandardScaler() 
strandarized_data = scaler.transform(X) # Changed 'transfrom' to 'transform'
print(strandarized_data)
X = strandarized_data
Y = diabetes_dataset['Outcome']
print(X)
print(Y)
#Trainandtestsplit
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)
#Training the model 
classifier = svm.SVC(kernel='linear')
#trainig the svm classifier 
classifier.fit(X_train, Y_train)
#evaluating the model
#evaluating the model
#accuracy score 
X_train_prediction = classifier.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)
print('Accuracy Score of train data :', training_data_accuracy)
X_test_Prediction = classifier.predict(X_test)
test_data_accuracy = accuracy_score(X_test_Prediction, Y_test)
print('Accuracy Score of test data :', test_data_accuracy)
#MAKING A PREDICTIVE SYSTEM
input_data = (6,148,72,35,0,33.6,0.627,50)

#changing data to numpy array 
input_data_as_numpy_array = np.asarray(input_data)

#reshaping the array for predicting only one data set
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

#strandrizing the data input
std_data = scaler.transform(input_data_reshaped)
print(std_data)

prediction = classifier.predict(std_data)
print(prediction)

if (prediction == 0):
    print('The person is not diabetic')

else:
    print('The person is diabetic') # Indented this line to be part of the 'else' block
